<% unless AppConfig.has_key?(:aspace_custom_restrictions_pui_enhance) && AppConfig[:aspace_custom_restrictions_pui_enhance] == false %>
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
  <%= stylesheet_link_tag "#{AppConfig[:public_proxy_prefix]}assets/#{AppConfig[:aspace_custom_restrictions_pui_assets_filename]}.css" %>
  <%= javascript_include_tag "#{AppConfig[:public_proxy_prefix]}assets/#{AppConfig[:aspace_custom_restrictions_pui_assets_filename]}.js" %>
  
  <% 

    def is_search? 
      controller.controller_name == "search"
    end
    def is_resource_idx? 
      controller.controller_name == "resources"
    end
    def is_accession_idx? 
      controller.controller_name == "accessions"
    end
    def is_digital_object_idx? 
      controller.controller_name == "objects"
    end

    custom_restrictions_object_data = {}
    if is_search? || is_accession_idx? || is_resource_idx? || is_digital_object_idx?
      unless @results.nil?
        @results.records.each do |full_result|
          result = full_result.raw
          unless result.nil? || result['custom_restrictions_u_sstr'].nil?
            restrictions = []

            raw_restrictions = result['custom_restrictions_u_sstr'].nil? ? {} : ASUtils.json_parse(result['custom_restrictions_u_sstr'].first)
            raw_restrictions.each do |level, restriction|
              restriction_message = I18n.t('enumerations.custom_restriction_type.' + restriction, default: I18n.t('enumerations.custom_restriction_type.default'))
              restrictions << I18n.t('custom_restrictions_and_context.restriction_label', 
                                  level: level.titleize,
                                  restriction: restriction_message
                              )
            end
            
            custom_restrictions_object_data[result['id']] = {
              'custom_restrictions' => restrictions,
            }
          end
        end
      end
    end
  %>

  <% if is_search? || is_accession_idx? || is_digital_object_idx? || is_resource_idx? %>
  <script>
    $().ready(() => {
      const puiSearchRestrictions = new CustomRestrictionsPui(`<%= raw ASUtils.to_json(custom_restrictions_object_data) %>`);
      puiSearchRestrictions.setupDecoratePuiSearch();
      <% unless AppConfig.has_key?(:aspace_custom_restrictions_pui_tree) && AppConfig[:aspace_custom_restrictions_pui_tree] == false %>
        <% unless @result.nil? %>
          <% unless @result.repository_information.nil? %>
            if (typeof tree !== 'undefined' && typeof LargeTree !== 'undefined') {
              if (tree instanceof LargeTree) {
                const customTree = new CustomRestrictionsTree(`<%= raw @result.repository_information.dig('top','uri') %>`, tree);
                customTree.initialize();
              }
            }
            if (typeof scroll !== 'undefined' && typeof InfiniteScroll !== 'undefined') {
              if (scroll instanceof InfiniteScroll) {
                const customInfiniteRecords = new CustomRestrictionsInfiniteScroll(`<%= raw @result.repository_information.dig('top','uri') %>`);
                customInfiniteRecords.initialize();
              }
            }
            if (typeof infiniteTree !== 'undefined' && typeof InfiniteTree !== 'undefined') {
              if (infiniteTree instanceof InfiniteTree) {
                const customInfiniteTree = new CustomRestrictionsInfiniteTree(`<%= raw @result.repository_information.dig('top','uri') %>`);
                customInfiniteTree.initialize();
              }
            }
            if (typeof infiniteRecords !== 'undefined' && typeof InfiniteRecords !== 'undefined') {
              if (infiniteRecords instanceof InfiniteRecords) {
                const customInfiniteRecords = new CustomRestrictionsInfiniteRecords(`<%= raw @result.repository_information.dig('top','uri') %>`);
                customInfiniteRecords.initialize();
              }
            }
          <% end %>
        <% end %>
      <% end %>
    });
  </script>
  <% end %>
<% end %>
